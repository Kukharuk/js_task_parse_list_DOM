{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","sortList","parsed","sortBySal","sort","a","b","toNumber","dataset","salary","string","slice","split","filter","el","join","getEmployees","sortedList","result","item","obj","name","outerText","position","age","push","sorted","ul","querySelector","innerHTML","map","innerText"],"mappings":";AAAA,aA+CA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7CA,IAAMA,EAAOC,SAASC,iBAAiB,MAEvC,SAASC,EAASC,GAITC,OAHW,EAAID,GAAQE,KAC5B,SAACC,EAAGC,GAAMC,OAAAA,EAASD,EAAEE,QAAQC,QAAUF,EAASF,EAAEG,QAAQC,UAK9D,SAASF,EAASG,GAGT,OAFQA,EAAOC,MAAM,GAAGC,MAAM,IAAIC,OAAO,SAAAC,GAAMA,MAAO,MAAPA,IAAYC,KAAK,IAKzE,SAASC,EAAaC,GACdC,IAD0B,EAC1BA,EAAS,GAEID,EAAAA,EAAAA,GAHa,IAGD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAApBE,IAAAA,EAAoB,EAAA,MACvBC,EAAM,CACVC,KAAMF,EAAKG,UACXC,SAAUJ,EAAKX,QAAQe,SACvBd,OAAQU,EAAKX,QAAQC,OACrBe,IAAKL,EAAKX,QAAQgB,KAGpBN,EAAOO,KAAKL,IAXkB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAczBF,OAAAA,EAGT,IAAMQ,EAASzB,EAASH,GAClB6B,EAAK5B,SAAS6B,cAAc,MAElCD,EAAGE,UACDH,KAAAA,OAAAA,EAAOI,IAAI,SAAAX,GAEKA,MAAAA,2BAAAA,OAAAA,EAAKX,QAAQe,SACfJ,qBAAAA,OAAAA,EAAKX,QAAQC,OAChBU,kBAAAA,OAAAA,EAAKX,QAAQgB,IACxBL,OAAAA,OAAAA,EAAKY,UALU,aAMdhB,KAAK,IAPR,MAUAC,EAAaU","file":"main.bb4e9a88.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\n\nfunction sortList(parsed) {\n  const sortBySal = [...parsed].sort(\n    (a, b) => toNumber(b.dataset.salary) - toNumber(a.dataset.salary));\n\n  return sortBySal;\n}\n\nfunction toNumber(string) {\n  const number = string.slice(1).split('').filter(el => el !== ',').join('');\n\n  return +number;\n}\n\nfunction getEmployees(sortedList) {\n  const result = [];\n\n  for (const item of sortedList) {\n    const obj = {\n      name: item.outerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    };\n\n    result.push(obj);\n  };\n\n  return result;\n}\n\nconst sorted = sortList(list);\nconst ul = document.querySelector('ul');\n\nul.innerHTML = `\n${sorted.map(item => `\n<li \n  data-position=${item.dataset.position} \n  data-salary=${item.dataset.salary} \n  data-age=${item.dataset.age}>\n${item.innerText}</li>\n`).join('')}\n`;\n\ngetEmployees(sorted);\n"]}